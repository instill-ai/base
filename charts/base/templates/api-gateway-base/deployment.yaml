apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "base.apiGatewayBase" . }}
  labels:
    {{- include "base.labels" . | nindent 4 }}
    app.kubernetes.io/component: api-gateway-base
  annotations:
    rollme: {{ randAlphaNum 5 | quote }}
spec:
  strategy:
    type: {{ .Values.updateStrategy.type }}
    {{- if eq .Values.updateStrategy.type "Recreate" }}
    rollingUpdate: null
    {{- end }}
  {{- if not .Values.apiGatewayBase.autoscaling.enabled }}
  replicas: {{ .Values.apiGatewayBase.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "base.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: api-gateway-base
  template:
    metadata:
      labels:
        {{- include "base.matchLabels" . | nindent 8 }}
        app.kubernetes.io/component: api-gateway-base
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/api-gateway-base/configmap.yaml") . | sha256sum }}
        {{- with .Values.apiGatewayBase.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
      {{- if .Values.apiGatewayBase.serviceAccountName }}
      serviceAccountName: {{ .Values.apiGatewayBase.serviceAccountName }}
      {{- end }}
      automountServiceAccountToken: {{ .Values.console.automountServiceAccountToken | default false }}
      terminationGracePeriodSeconds: 120
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: wait-for-dependencies
          image: curlimages/curl:8.00.1
          command: ['sh', '-c']
          args:
          - >
            while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${MGMT_BACKEND_HOST}:${MGMT_BACKEND_PORT}/v1alpha/health/mgmt)" != "200" ]]; do echo waiting for mgmt-backend; sleep 1; done
          {{- if .Values.tags.observability }}
            && while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' ${INFLUXDB_HOST}:${INFLUXDB_PORT}/health)" != "200" ]]; do echo waiting for influxdb; sleep 1; done
          {{- end }}
          env:
            - name: MGMT_BACKEND_HOST
              value: "{{ template "base.mgmtBackend" . }}"
            - name: MGMT_BACKEND_PORT
              value: "{{ template "base.mgmtBackend.publicPort" . }}"
            - name: INFLUXDB_HOST
              value: "{{ template "base.influxdb" . }}"
            - name: INFLUXDB_PORT
              value: "{{ template "base.influxdb.port" . }}"
        {{- if .Values.temporal.enabled }}
        - name: temporal-admin-tools
          securityContext:
            runAsUser: 0
          image: {{ .Values.temporal.admintools.image.repository }}:{{ .Values.temporal.admintools.image.tag }}
          imagePullPolicy: {{ .Values.temporal.admintools.image.pullPolicy }}
          command: ["/bin/bash", "-c"]
          args:
            - >
              until tctl cluster health 2>&1 > /dev/null; do echo waiting for Temporal; sleep 2; done
          env:
            - name: TEMPORAL_CLI_ADDRESS
              value: "{{ template "base.temporal" . }}-frontend:{{ template "base.temporal.frontend.grpcPort" . }}"
        {{- end }}
        {{- with .Values.apiGatewayBase.extraInitContainers }}
        {{- toYaml . | indent 8 }}
        {{- end }}
      containers:
        - name: api-gateway-base
          image: {{ .Values.apiGatewayBase.image.repository }}:{{ .Values.apiGatewayBase.image.tag }}
          imagePullPolicy: {{ .Values.apiGatewayBase.image.pullPolicy }}
          readinessProbe:
            httpGet:
              path: /__health
              scheme: {{ upper (ternary "https" "http" .Values.apiGatewayBase.tls.enabled) }}
              port: {{ ternary "https" "http" .Values.apiGatewayBase.tls.enabled }}
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /__health
              scheme: {{ upper (ternary "https" "http" .Values.apiGatewayBase.tls.enabled) }}
              port: {{ ternary "https" "http" .Values.apiGatewayBase.tls.enabled }}
            initialDelaySeconds: 5
            periodSeconds: 10
          {{- if .Values.apiGatewayBase.resources }}
          resources:
            {{- toYaml .Values.apiGatewayBase.resources | nindent 12 }}
          {{- end }}
          command: ["/bin/bash", "-c"]
          args:
            - |
              make config && \
              krakend run \
            {{- if (eq (.Values.logLevel | upper) "DEBUG") }}
              --debug \
            {{- end }}
              --config krakend.json
          ports:
            - name: {{ ternary "https" "http" .Values.apiGatewayBase.tls.enabled }}
              containerPort: {{ template "base.apiGatewayBase.httpPort" . }}
              protocol: TCP
            - name: stats
              containerPort: {{ template "base.apiGatewayBase.statsPort" . }}
              protocol: TCP
            - name: metrics
              containerPort: {{ template "base.apiGatewayBase.metricsPort" . }}
              protocol: TCP
          volumeMounts:
            - name: config
              mountPath: {{ .Values.apiGatewayBase.configPath }}
              subPath: ".env"
            {{- if .Values.apiGatewayBase.tls.enabledd }}
            - name: {{ template "base.internalTLS.apiGatewayBase.secretName" . }}
              mountPath: "/etc/instill-ai/base/ssl/api-gateway"
              readOnly: true
            {{- end }}
            {{- with .Values.apiGatewayBase.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          {{- with .Values.apiGatewayBase.extraEnv }}
          env:
            {{- toYaml . | nindent 12 }}
          {{- end }}
        {{- with .Values.apiGatewayBase.sidecarContainers }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ template "base.apiGatewayBase" . }}
        {{- if .Values.apiGatewayBase.tls.enabled }}
        - name: {{ template "base.internalTLS.apiGatewayBase.secretName" . }}
          secret:
            secretName: {{ template "base.internalTLS.apiGatewayBase.secretName" . }}
            items:
            - key: tls.crt
              path: tls.crt
            - key: tls.key
              path: tls.key
        {{- end }}
        {{- with .Values.apiGatewayBase.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.apiGatewayBase.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apiGatewayBase.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.apiGatewayBase.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
