name: Integration Test Reusable (console)

on:
  workflow_call:
    inputs:
      target:
        required: true
        type: string

jobs:
  integration-test-latest:
    if: inputs.target == 'latest'
    runs-on: ubuntu-latest
    steps:
      # mono occupies port 8084 which conflicts with mgmt-backend
      - name: Stop mono service
        run: |
          sudo kill -9 `sudo lsof -t -i:8084`
          sudo lsof -i -P -n | grep LISTEN

      - name: Free disk space
        run: |
          df --human-readable
          sudo apt clean
          docker rmi $(docker image ls --all --quiet)
          rm --recursive --force "$AGENT_TOOLSDIRECTORY"
          df --human-readable

      - name: Checkout repo (base)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/base

      - name: Load .env file (base)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Base (latest)
        run: |
          CONSOLE_PUBLIC_API_GATEWAY_HOST=api-gateway \
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Checkout repo (vdp)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/vdp

      - name: Load .env file (vdp)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill VDP (latest)
        run: |
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Checkout repo (model)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file (model)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Model (latest)
        run: |
          ITMODE_ENABLED=true \
          TRITON_CONDA_ENV_PLATFORM=cpu \
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          ITMODE_ENABLED=true \
          TRITON_CONDA_ENV_PLATFORM=cpu \
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Run console integration test (latest)
        run: |
          git clone https://github.com/instill-ai/console.git
          cd console && docker build --build-arg TEST_USER='root' -f Dockerfile.playwright -t console-playwright:latest .
          docker run -t --rm \
            -e NEXT_PUBLIC_API_VERSION=v1alpha \
            -e NEXT_PUBLIC_CONSOLE_EDITION=local-ce:test \
            -e NEXT_PUBLIC_CONSOLE_BASE_URL=http://console:3000 \
            -e NEXT_PUBLIC_API_GATEWAY_URL=http://${API_GATEWAY_HOST}:${API_GATEWAY_PORT}  \
            -e NEXT_SERVER_API_GATEWAY_URL=http://${API_GATEWAY_HOST}:${API_GATEWAY_PORT}  \
            -e NEXT_PUBLIC_SELF_SIGNED_CERTIFICATION=false \
            -e NEXT_PUBLIC_INSTILL_AI_USER_COOKIE_NAME=instill-ai-user \
            --network instill-network \
            --entrypoint ./entrypoint-playwright.sh \
            --name console-integration-test \
            console-playwright:latest

  integration-test-release:
    if: inputs.target == 'release'
    runs-on: ubuntu-latest
    steps:
      # mono occupies port 8084 which conflicts with mgmt-backend
      - name: Stop mono service
        run: |
          sudo kill -9 `sudo lsof -t -i:8084`
          sudo lsof -i -P -n | grep LISTEN

      - name: Free disk space
        run: |
          df --human-readable
          sudo apt clean
          docker rmi $(docker image ls --all --quiet)
          rm --recursive --force "$AGENT_TOOLSDIRECTORY"
          df --human-readable

      - name: Checkout repo (base)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/base

      - name: Load .env file (base)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Base (release)
        run: |
          CONSOLE_PUBLIC_API_GATEWAY_HOST=api-gateway \
          EDITION=local-ce:test \
          docker compose up -d --quiet-pull
          EDITION=local-ce:test \
          docker compose rm -f

      - name: Checkout repo (vdp)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/vdp

      - name: Load .env file (vdp)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill VDP (latest)
        run: |
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Checkout repo (model)
        uses: actions/checkout@v3
        with:
          repository: instill-ai/model

      - name: Load .env file (model)
        uses: cardinalby/export-env-action@v2
        with:
          envFile: .env

      - name: Launch Instill Model (latest)
        run: |
          ITMODE_ENABLED=true \
          TRITON_CONDA_ENV_PLATFORM=cpu \
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml up -d --quiet-pull
          ITMODE_ENABLED=true \
          TRITON_CONDA_ENV_PLATFORM=cpu \
          COMPOSE_PROFILES=all \
          EDITION=local-ce:test \
          docker compose -f docker-compose.yml -f docker-compose.latest.yml rm -f

      - name: Run console integration test (release)
        run: |
          git clone -b v$CONSOLE_VERSION https://github.com/instill-ai/console.git
          cd console && docker build --build-arg TEST_USER='root' -f Dockerfile.playwright -t console-playwright:${{ env.CONSOLE_VERSION }} .
          docker run -t --rm \
            -e NEXT_PUBLIC_API_VERSION=v1alpha \
            -e NEXT_PUBLIC_CONSOLE_EDITION=local-ce:test \
            -e NEXT_PUBLIC_CONSOLE_BASE_URL=http://console:3000 \
            -e NEXT_PUBLIC_API_GATEWAY_URL=http://${API_GATEWAY_HOST}:${API_GATEWAY_PORT}  \
            -e NEXT_SERVER_API_GATEWAY_URL=http://${API_GATEWAY_HOST}:${API_GATEWAY_PORT}  \
            -e NEXT_PUBLIC_SELF_SIGNED_CERTIFICATION=false \
            -e NEXT_PUBLIC_INSTILL_AI_USER_COOKIE_NAME=instill-ai-user \
            --network instill-network \
            --entrypoint ./entrypoint-playwright.sh \
            --name console-integration-test \
            console-playwright:${{ env.CONSOLE_VERSION }}
